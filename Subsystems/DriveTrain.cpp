#include "../Commands/Drive.h"
// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "DriveTrain.h"
#include "../Robotmap.h"
DriveTrain::DriveTrain() : Subsystem("DriveTrain") {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	leftDriveMotor = RobotMap::driveTrainLeftDriveMotor;
	rightDriveMotor = RobotMap::driveTrainRightDriveMotor;
	robotDrive = RobotMap::driveTrainRobotDrive;
	leftEncoder = RobotMap::driveTrainLeftEncoder;
	rightEncoder = RobotMap::driveTrainRightEncoder;
	gyro = RobotMap::driveTrainGyro;
	leftShiftSolenoid = RobotMap::driveTrainLeftShiftSolenoid;
	rightShiftSolenoid = RobotMap::driveTrainRightShiftSolenoid;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
}
    
void DriveTrain::InitDefaultCommand() {
	// Set the default command for a subsystem here.
	//SetDefaultCommand(new MySpecialCommand());
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	SetDefaultCommand(new Drive());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}
void DriveTrain::Gear(bool dir) {
	Stop();
	leftShiftSolenoid->Set(dir);
	rightShiftSolenoid->Set(dir);
}
void DriveTrain::Stop() {
	leftDriveMotor->Set(0);
	rightDriveMotor->Set(0);
}
void DriveTrain::Go(float speed) {
	robotDrive->Drive(speed, wantedAngle - (gyro->GetAngle() / 30.0));
}

float DriveTrain::GetDistance() {
	return rightEncoder->Get();
}
// Put methods for controlling this subsystem
// here. Call these from Commands.
